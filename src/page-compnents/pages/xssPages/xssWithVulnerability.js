import React, { Component } from "react";

import XssInputForm from "./additionalFiles/xssInputForm";
import InnerHTML from "dangerously-set-html-content";
import "../comCss/box2.css";

class XssWithVulnerability extends Component {
  constructor(props) {
    super(props);
    this.state = {
      inputValue: "",
      finalInputValue: "",
    };
  }

  handleOnSubmit = (event) => {
    event.preventDefault();
    this.setState({ finalInputValue: this.state.inputValue });
    // console.log(this.state.finalInputValue);
  };

  handleInputChange = (event) => {
    event.preventDefault();
    // console.log(event.target.value);
    this.setState({
      [event.target.name]: event.target.value,
    });
  };

  render() {
    return (
      <React.Fragment>
        <img
          className="wave"
          src={require("../resourses/img-files/wave.png")}
          alt="nice"
          aria-hidden="true"
        />
        <h1 className="head">XSS With Vulnerability</h1>
        <XssInputForm
          handleInputChange={this.handleInputChange}
          handleOnSubmit={this.handleOnSubmit}
        />

        {this.state.finalInputValue !== "" ? (
          <div className="output">
            {/* <span
              dangerouslySetInnerHTML={{ __html: this.state.finalInputValue }}
            /> */}
            <InnerHTML html={this.state.finalInputValue} />
          </div>
        ) : (
          ""
        )}
      </React.Fragment>
    );
  }
}

export default XssWithVulnerability;
